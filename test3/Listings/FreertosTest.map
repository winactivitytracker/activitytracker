Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(i.vPeriodicTask) for vPeriodicTask
    main.o(i.vPeriodicTask) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    main.o(i.vPeriodicTask) refers to tasks.o(i.vTaskDelayUntil) for vTaskDelayUntil
    startup_stm32f051x8.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f051x8.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f051x8.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f051x8.o(RESET) refers to startup_stm32f051x8.o(STACK) for __initial_sp
    startup_stm32f051x8.o(RESET) refers to startup_stm32f051x8.o(.text) for Reset_Handler
    startup_stm32f051x8.o(RESET) refers to port.o(i.SVC_Handler) for SVC_Handler
    startup_stm32f051x8.o(RESET) refers to port.o(.emb_text) for PendSV_Handler
    startup_stm32f051x8.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f051x8.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f051x8.o(.text) refers to system_stm32f0xx.o(i.SystemInit) for SystemInit
    startup_stm32f051x8.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f051x8.o(.text) refers to startup_stm32f051x8.o(HEAP) for Heap_Mem
    startup_stm32f051x8.o(.text) refers to startup_stm32f051x8.o(STACK) for Stack_Mem
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    system_stm32f0xx.o(i.SystemCoreClockUpdate) refers to system_stm32f0xx.o(.constdata) for AHBPrescTable
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.data) for pucAlignedHeap
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.bss) for ucHeap
    heap_1.o(i.vPortInitialiseBlocks) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.xPortGetFreeHeapSize) refers to heap_1.o(.data) for xNextFreeByte
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(i.SysTick_Handler) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.prvSetupTimerInterrupt) refers to aeabi_sdiv.o(.text) for __aeabi_uidivmod
    port.o(i.prvSetupTimerInterrupt) refers to system_stm32f0xx.o(.data) for SystemCoreClock
    port.o(i.prvTaskExitError) refers to port.o(.data) for uxCriticalNesting
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEndScheduler) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.prvSetupTimerInterrupt) for prvSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvPortStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to tasks.o(i.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvNotifyQueueSetContainer) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.prvNotifyQueueSetContainer) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueWaitForMessageRestricted) refers to tasks.o(i.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(i.vQueueWaitForMessageRestricted) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueAddToSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueCreateCountingSemaphore) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueCreateMutex) refers to queue.o(i.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(i.xQueueCreateSet) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(i.xQueueGenericCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGetMutexHolder) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGetMutexHolder) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueGiveFromISR) refers to queue.o(i.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueGiveMutexRecursive) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueuePeek) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueuePeek) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeek) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueuePeek) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueuePeek) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueuePeek) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueuePeek) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueuePeek) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueuePeekFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueReceive) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueReceiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueRemoveFromSet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSelectFromSet) refers to queue.o(i.xQueueReceive) for xQueueReceive
    queue.o(i.xQueueSelectFromSetFromISR) refers to queue.o(i.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortYield) for vPortYield
    queue.o(i.xQueueSemaphoreTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueSemaphoreTake) refers to queue.o(i.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(i.xQueueSemaphoreTake) refers to tasks.o(i.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(i.xQueueTakeMutexRecursive) refers to tasks.o(i.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(i.xQueueTakeMutexRecursive) refers to queue.o(i.xQueueSemaphoreTake) for xQueueSemaphoreTake
    tasks.o(i.eTaskConfirmSleepModeStatus) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.eTaskConfirmSleepModeStatus) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvGetExpectedIdleTime) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.prvGetExpectedIdleTime) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvGetExpectedIdleTime) for prvGetExpectedIdleTime
    tasks.o(i.prvIdleTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvIdleTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvIdleTask) refers to tasks.o(.data) for xNextTaskUnblockTime
    tasks.o(i.prvInitialiseNewTask) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvListTasksWithinSingleList) refers to tasks.o(i.vTaskGetInfo) for vTaskGetInfo
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pvTaskIncrementMutexHeldCount) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetStackHighWaterMark2) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark2) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelay) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.vTaskGetInfo) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.vTaskGetInfo) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskInternalSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventListRestricted) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSetTimeOutState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to timers.o(i.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskStepTick) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.xTaskAbortDelay) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskAbortDelay) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskAbortDelay) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskAbortDelay) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskAbortDelay) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetCurrentTaskHandle) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskGetHandle) refers to strlen.o(.text) for strlen
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.prvSearchForNameWithinSingleList) for prvSearchForNameWithinSingleList
    tasks.o(i.xTaskGetHandle) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.xTaskGetHandle) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetHandle) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.xTaskGetIdleTaskHandle) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.xTaskGetSchedulerState) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityDisinherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityDisinherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskPriorityInherit) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskPriorityInherit) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortYield) for vPortYield
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to port.o(.emb_text) for ulSetInterruptMaskFromISR
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to list.o(i.vListInitialise) for vListInitialise
    timers.o(i.prvCheckForValidListAndQueue) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(i.prvCheckForValidListAndQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvCheckForValidListAndQueue) refers to timers.o(.bss) for xActiveTimerList1
    timers.o(i.prvGetNextExpireTime) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvInitialiseNewTimer) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.prvInitialiseNewTimer) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    timers.o(i.prvInsertTimerInActiveList) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvInsertTimerInActiveList) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvProcessExpiredTimer) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessExpiredTimer) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvProcessReceivedCommands) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessReceivedCommands) refers to tasks.o(i.__ARM_common_switch8) for __ARM_common_switch8
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvProcessReceivedCommands) refers to heap_1.o(i.vPortFree) for vPortFree
    timers.o(i.prvProcessReceivedCommands) refers to queue.o(i.xQueueReceive) for xQueueReceive
    timers.o(i.prvProcessReceivedCommands) refers to timers.o(.data) for xTimerQueue
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(i.prvProcessTimerOrBlockTask) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(i.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(i.prvProcessTimerOrBlockTask) refers to queue.o(i.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(i.prvProcessTimerOrBlockTask) refers to port.o(i.vPortYield) for vPortYield
    timers.o(i.prvProcessTimerOrBlockTask) refers to timers.o(.data) for pxOverflowTimerList
    timers.o(i.prvSampleTimeNow) refers to tasks.o(i.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(i.prvSampleTimeNow) refers to timers.o(i.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(i.prvSampleTimeNow) refers to timers.o(.data) for xLastTime
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.uxListRemove) for uxListRemove
    timers.o(i.prvSwitchTimerLists) refers to list.o(i.vListInsert) for vListInsert
    timers.o(i.prvSwitchTimerLists) refers to timers.o(i.xTimerGenericCommand) for xTimerGenericCommand
    timers.o(i.prvSwitchTimerLists) refers to timers.o(.data) for pxCurrentTimerList
    timers.o(i.prvTimerTask) refers to timers.o(i.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(i.prvTimerTask) refers to timers.o(i.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.pvTimerGetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetReloadMode) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.vTimerSetTimerID) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    timers.o(i.xTimerCreate) refers to timers.o(i.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(i.xTimerCreateTimerTask) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerCreateTimerTask) refers to timers.o(i.prvTimerTask) for prvTimerTask
    timers.o(i.xTimerGenericCommand) refers to tasks.o(i.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerGenericCommand) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerGenericCommand) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.data) for xTimerTaskHandle
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    timers.o(i.xTimerIsTimerActive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    timers.o(i.xTimerPendFunctionCall) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    timers.o(i.xTimerPendFunctionCall) refers to timers.o(.data) for xTimerQueue
    timers.o(i.xTimerPendFunctionCallFromISR) refers to queue.o(i.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(i.xTimerPendFunctionCallFromISR) refers to timers.o(.data) for xTimerQueue
    rt_memcpy.o(.text) refers to rt_memcpy.o(.emb_text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_idiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f051x8.o(.text) for __user_initial_stackheap
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to tempstk.o(.text) for __temporary_stack_top
    sys_stackheap_outer.o(__vectab_stack_and_reset_area) refers to __main.o(!!!main) for __main
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.text) for __ARM_argv_veneer
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing system_stm32f0xx.o(.rev16_text), (4 bytes).
    Removing system_stm32f0xx.o(.revsh_text), (4 bytes).
    Removing system_stm32f0xx.o(i.SystemCoreClockUpdate), (176 bytes).
    Removing system_stm32f0xx.o(.constdata), (24 bytes).
    Removing freertos_evr.o(.rev16_text), (4 bytes).
    Removing freertos_evr.o(.revsh_text), (4 bytes).
    Removing list.o(.rev16_text), (4 bytes).
    Removing list.o(.revsh_text), (4 bytes).
    Removing heap_1.o(.rev16_text), (4 bytes).
    Removing heap_1.o(.revsh_text), (4 bytes).
    Removing heap_1.o(i.vPortInitialiseBlocks), (12 bytes).
    Removing heap_1.o(i.xPortGetFreeHeapSize), (20 bytes).
    Removing port.o(.rev16_text), (4 bytes).
    Removing port.o(.revsh_text), (4 bytes).
    Removing port.o(i.vPortEndScheduler), (36 bytes).
    Removing queue.o(.rev16_text), (4 bytes).
    Removing queue.o(.revsh_text), (4 bytes).
    Removing queue.o(i.prvGetDisinheritPriorityAfterTimeout), (22 bytes).
    Removing queue.o(i.prvInitialiseMutex), (32 bytes).
    Removing queue.o(i.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(i.uxQueueGetQueueNumber), (6 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (28 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (18 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(i.vQueueDelete), (24 bytes).
    Removing queue.o(i.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(i.xQueueAddToSet), (42 bytes).
    Removing queue.o(i.xQueueCreateCountingSemaphore), (68 bytes).
    Removing queue.o(i.xQueueCreateMutex), (30 bytes).
    Removing queue.o(i.xQueueCreateSet), (20 bytes).
    Removing queue.o(i.xQueueGetMutexHolder), (30 bytes).
    Removing queue.o(i.xQueueGetMutexHolderFromISR), (26 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (198 bytes).
    Removing queue.o(i.xQueueGiveMutexRecursive), (60 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (28 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (32 bytes).
    Removing queue.o(i.xQueuePeek), (316 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (108 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (158 bytes).
    Removing queue.o(i.xQueueRemoveFromSet), (46 bytes).
    Removing queue.o(i.xQueueSelectFromSet), (24 bytes).
    Removing queue.o(i.xQueueSelectFromSetFromISR), (22 bytes).
    Removing queue.o(i.xQueueSemaphoreTake), (382 bytes).
    Removing queue.o(i.xQueueTakeMutexRecursive), (62 bytes).
    Removing tasks.o(.rev16_text), (4 bytes).
    Removing tasks.o(.revsh_text), (4 bytes).
    Removing tasks.o(i.eTaskConfirmSleepModeStatus), (64 bytes).
    Removing tasks.o(i.eTaskGetState), (140 bytes).
    Removing tasks.o(i.pcTaskGetName), (36 bytes).
    Removing tasks.o(i.prvListTasksWithinSingleList), (106 bytes).
    Removing tasks.o(i.prvSearchForNameWithinSingleList), (148 bytes).
    Removing tasks.o(i.prvTaskCheckFreeStackSpace), (22 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (84 bytes).
    Removing tasks.o(i.pvTaskIncrementMutexHeldCount), (32 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (108 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark), (36 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark2), (36 bytes).
    Removing tasks.o(i.uxTaskGetSystemState), (164 bytes).
    Removing tasks.o(i.uxTaskGetTaskNumber), (16 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelay), (68 bytes).
    Removing tasks.o(i.vTaskDelete), (180 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (20 bytes).
    Removing tasks.o(i.vTaskGetInfo), (132 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (180 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (84 bytes).
    Removing tasks.o(i.vTaskPriorityDisinheritAfterTimeout), (176 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (228 bytes).
    Removing tasks.o(i.vTaskRemoveFromUnorderedEventList), (136 bytes).
    Removing tasks.o(i.vTaskResume), (116 bytes).
    Removing tasks.o(i.vTaskSetTaskNumber), (10 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (44 bytes).
    Removing tasks.o(i.vTaskStepTick), (52 bytes).
    Removing tasks.o(i.vTaskSuspend), (180 bytes).
    Removing tasks.o(i.xTaskAbortDelay), (144 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (244 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (288 bytes).
    Removing tasks.o(i.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(i.xTaskGetHandle), (156 bytes).
    Removing tasks.o(i.xTaskGetIdleTaskHandle), (36 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (56 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(i.xTaskPriorityInherit), (164 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (136 bytes).
    Removing timers.o(.rev16_text), (4 bytes).
    Removing timers.o(.revsh_text), (4 bytes).
    Removing timers.o(i.pcTimerGetName), (18 bytes).
    Removing timers.o(i.prvInitialiseNewTimer), (78 bytes).
    Removing timers.o(i.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(i.uxTimerGetTimerNumber), (6 bytes).
    Removing timers.o(i.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(i.vTimerSetTimerID), (30 bytes).
    Removing timers.o(i.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(i.xTimerCreate), (50 bytes).
    Removing timers.o(i.xTimerGetExpiryTime), (18 bytes).
    Removing timers.o(i.xTimerGetPeriod), (18 bytes).
    Removing timers.o(i.xTimerGetTimerDaemonTaskHandle), (36 bytes).
    Removing timers.o(i.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(i.xTimerPendFunctionCall), (64 bytes).
    Removing timers.o(i.xTimerPendFunctionCallFromISR), (52 bytes).

106 unused section(s) (total 6782 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_idiv0_sigfpe.o ABSOLUTE
    ../clib/angel/scatterp.s                 0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  tempstk.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv_div0.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.c                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/cfplib/fpinit.c                 0x00000000   Number         0  fpinit.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\CMSIS\RTOS2\FreeRTOS\Source\freertos_evr.c 0x00000000   Number         0  freertos_evr.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\list.c 0x00000000   Number         0  list.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\portable\MemMang\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\portable\RVDS\ARM_CM0\port.c 0x00000000   Number         0  port.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    C:\Users\toonh\AppData\Local\Arm\Packs\ARM\CMSIS-FreeRTOS\10.3.0\Source\timers.c 0x00000000   Number         0  timers.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\CMSIS\\RTOS2\\FreeRTOS\\Source\\freertos_evr.c 0x00000000   Number         0  freertos_evr.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\list.c 0x00000000   Number         0  list.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\portable\\MemMang\\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\portable\\RVDS\\ARM_CM0\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\queue.c 0x00000000   Number         0  queue.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\tasks.c 0x00000000   Number         0  tasks.o ABSOLUTE
    C:\\Users\\toonh\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS-FreeRTOS\\10.3.0\\Source\\timers.c 0x00000000   Number         0  timers.o ABSOLUTE
    RTE\Device\STM32F051R8Tx\startup_stm32f051x8.s 0x00000000   Number         0  startup_stm32f051x8.o ABSOLUTE
    RTE\Device\STM32F051R8Tx\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    RTE\\Device\\STM32F051R8Tx\\system_stm32f0xx.c 0x00000000   Number         0  system_stm32f0xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    RESET                                    0x08000000   Section      188  startup_stm32f051x8.o(RESET)
    !!!main                                  0x080000bc   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000c4   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000100   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x0800011c   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000138   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800013a   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800013a   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0800013c   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800013e   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800013e   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000140   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000140   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000140   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x08000146   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x08000146   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800014a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800014a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000152   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000154   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000154   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000158   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000160   Section      120  port.o(.emb_text)
    .emb_text                                0x080001d8   Section       56  rt_memcpy.o(.emb_text)
    .text                                    0x08000210   Section       56  startup_stm32f051x8.o(.text)
    .text                                    0x08000248   Section        0  rt_memcpy.o(.text)
    .text                                    0x080002ca   Section        0  aeabi_memset.o(.text)
    .text                                    0x080002dc   Section      346  aeabi_sdiv.o(.text)
    .text                                    0x08000436   Section        0  heapauxi.o(.text)
    .text                                    0x0800043c   Section        0  rt_memclr.o(.text)
    .text                                    0x0800047c   Section       62  sys_stackheap_outer.o(.text)
    .text                                    0x080004ba   Section        0  exit.o(.text)
    .text                                    0x080004cc   Section        8  libspace.o(.text)
    .text                                    0x080004d4   Section        0  sys_exit.o(.text)
    .text                                    0x080004e0   Section        2  use_no_semi.o(.text)
    .text                                    0x080004e2   Section        0  indicate_semi.o(.text)
    i.SVC_Handler                            0x080004e2   Section        0  port.o(i.SVC_Handler)
    i.SysTick_Handler                        0x080004e4   Section        0  port.o(i.SysTick_Handler)
    i.SystemInit                             0x08000508   Section        0  system_stm32f0xx.o(i.SystemInit)
    i.__ARM_common_switch8                   0x0800050a   Section        0  tasks.o(i.__ARM_common_switch8)
    i.main                                   0x08000528   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x08000554   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x08000555   Thumb Code   110  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x080005dc   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x080005dd   Thumb Code   146  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckForValidListAndQueue           0x08000688   Section        0  timers.o(i.prvCheckForValidListAndQueue)
    prvCheckForValidListAndQueue             0x08000689   Thumb Code    58  timers.o(i.prvCheckForValidListAndQueue)
    i.prvCheckTasksWaitingTermination        0x080006d8   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x080006d9   Thumb Code    60  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x08000720   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x08000721   Thumb Code    44  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x0800074c   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x0800074d   Thumb Code   128  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x080007cc   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x080007cd   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvGetExpectedIdleTime                 0x080007e0   Section        0  tasks.o(i.prvGetExpectedIdleTime)
    prvGetExpectedIdleTime                   0x080007e1   Thumb Code    58  tasks.o(i.prvGetExpectedIdleTime)
    i.prvGetNextExpireTime                   0x08000830   Section        0  timers.o(i.prvGetNextExpireTime)
    prvGetNextExpireTime                     0x08000831   Thumb Code    40  timers.o(i.prvGetNextExpireTime)
    i.prvIdleTask                            0x0800085c   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x0800085d   Thumb Code    72  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x080008b0   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x080008b1   Thumb Code    48  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x080008e0   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x080008e1   Thumb Code   192  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x080009a0   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x080009a1   Thumb Code    68  tasks.o(i.prvInitialiseTaskLists)
    i.prvInsertTimerInActiveList             0x08000a04   Section        0  timers.o(i.prvInsertTimerInActiveList)
    prvInsertTimerInActiveList               0x08000a05   Thumb Code    76  timers.o(i.prvInsertTimerInActiveList)
    i.prvIsQueueEmpty                        0x08000a58   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x08000a59   Thumb Code    28  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x08000a74   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x08000a75   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvNotifyQueueSetContainer             0x08000a92   Section        0  queue.o(i.prvNotifyQueueSetContainer)
    prvNotifyQueueSetContainer               0x08000a93   Thumb Code   122  queue.o(i.prvNotifyQueueSetContainer)
    i.prvProcessExpiredTimer                 0x08000b0c   Section        0  timers.o(i.prvProcessExpiredTimer)
    prvProcessExpiredTimer                   0x08000b0d   Thumb Code   100  timers.o(i.prvProcessExpiredTimer)
    i.prvProcessReceivedCommands             0x08000b74   Section        0  timers.o(i.prvProcessReceivedCommands)
    prvProcessReceivedCommands               0x08000b75   Thumb Code   318  timers.o(i.prvProcessReceivedCommands)
    i.prvProcessTimerOrBlockTask             0x08000cb8   Section        0  timers.o(i.prvProcessTimerOrBlockTask)
    prvProcessTimerOrBlockTask               0x08000cb9   Thumb Code   100  timers.o(i.prvProcessTimerOrBlockTask)
    i.prvResetNextTaskUnblockTime            0x08000d24   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x08000d25   Thumb Code    46  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvSampleTimeNow                       0x08000d5c   Section        0  timers.o(i.prvSampleTimeNow)
    prvSampleTimeNow                         0x08000d5d   Thumb Code    40  timers.o(i.prvSampleTimeNow)
    i.prvSetupTimerInterrupt                 0x08000d88   Section        0  port.o(i.prvSetupTimerInterrupt)
    prvSetupTimerInterrupt                   0x08000d89   Thumb Code    34  port.o(i.prvSetupTimerInterrupt)
    i.prvSwitchTimerLists                    0x08000db4   Section        0  timers.o(i.prvSwitchTimerLists)
    prvSwitchTimerLists                      0x08000db5   Thumb Code   140  timers.o(i.prvSwitchTimerLists)
    i.prvTaskExitError                       0x08000e48   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x08000e49   Thumb Code    32  port.o(i.prvTaskExitError)
    i.prvTimerTask                           0x08000e6c   Section        0  timers.o(i.prvTimerTask)
    prvTimerTask                             0x08000e6d   Thumb Code    26  timers.o(i.prvTimerTask)
    i.prvUnlockQueue                         0x08000e86   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x08000e87   Thumb Code   166  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x08000f2c   Section        0  heap_1.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x08000fa0   Section        0  port.o(i.pxPortInitialiseStack)
    i.uxListRemove                           0x08000fc0   Section        0  list.o(i.uxListRemove)
    i.vListInitialise                        0x08000fe8   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x08001002   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x08001008   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x0800103e   Section        0  list.o(i.vListInsertEnd)
    i.vPeriodicTask                          0x08001056   Section        0  main.o(i.vPeriodicTask)
    i.vPortEnterCritical                     0x08001070   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x0800108c   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x080010b4   Section        0  heap_1.o(i.vPortFree)
    i.vPortYield                             0x080010cc   Section        0  port.o(i.vPortYield)
    i.vQueueWaitForMessageRestricted         0x080010e4   Section        0  queue.o(i.vQueueWaitForMessageRestricted)
    i.vTaskDelayUntil                        0x08001130   Section        0  tasks.o(i.vTaskDelayUntil)
    i.vTaskInternalSetTimeOutState           0x080011cc   Section        0  tasks.o(i.vTaskInternalSetTimeOutState)
    i.vTaskMissedYield                       0x080011e4   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x080011f0   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskPlaceOnEventListRestricted        0x0800121c   Section        0  tasks.o(i.vTaskPlaceOnEventListRestricted)
    i.vTaskStartScheduler                    0x08001250   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x080012c8   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x080012d8   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x08001358   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x08001390   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReset                     0x080013e4   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x08001466   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGenericSendFromISR               0x080015e6   Section        0  queue.o(i.xQueueGenericSendFromISR)
    i.xQueueReceive                          0x080016be   Section        0  queue.o(i.xQueueReceive)
    i.xTaskCheckForTimeOut                   0x080017f8   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x08001888   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskGetSchedulerState                 0x080018e4   Section        0  tasks.o(i.xTaskGetSchedulerState)
    i.xTaskGetTickCount                      0x08001908   Section        0  tasks.o(i.xTaskGetTickCount)
    i.xTaskIncrementTick                     0x08001914   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskPriorityDisinherit                0x08001a50   Section        0  tasks.o(i.xTaskPriorityDisinherit)
    i.xTaskRemoveFromEventList               0x08001ad8   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x08001b64   Section        0  tasks.o(i.xTaskResumeAll)
    i.xTimerCreateTimerTask                  0x08001c54   Section        0  timers.o(i.xTimerCreateTimerTask)
    i.xTimerGenericCommand                   0x08001c9c   Section        0  timers.o(i.xTimerGenericCommand)
    .data                                    0x20000000   Section        4  system_stm32f0xx.o(.data)
    .data                                    0x20000004   Section        8  heap_1.o(.data)
    xNextFreeByte                            0x20000004   Data           4  heap_1.o(.data)
    pucAlignedHeap                           0x20000008   Data           4  heap_1.o(.data)
    .data                                    0x2000000c   Section        4  port.o(.data)
    uxCriticalNesting                        0x2000000c   Data           4  port.o(.data)
    .data                                    0x20000010   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x20000014   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000018   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x2000001c   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000020   Data           4  tasks.o(.data)
    xTickCount                               0x20000024   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000028   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x2000002c   Data           4  tasks.o(.data)
    uxPendedTicks                            0x20000030   Data           4  tasks.o(.data)
    xYieldPending                            0x20000034   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000038   Data           4  tasks.o(.data)
    uxTaskNumber                             0x2000003c   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000040   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000044   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000048   Data           4  tasks.o(.data)
    .data                                    0x2000004c   Section       20  timers.o(.data)
    pxCurrentTimerList                       0x2000004c   Data           4  timers.o(.data)
    pxOverflowTimerList                      0x20000050   Data           4  timers.o(.data)
    xTimerQueue                              0x20000054   Data           4  timers.o(.data)
    xTimerTaskHandle                         0x20000058   Data           4  timers.o(.data)
    xLastTime                                0x2000005c   Data           4  timers.o(.data)
    .bss                                     0x20000060   Section     4096  heap_1.o(.bss)
    ucHeap                                   0x20000060   Data        4096  heap_1.o(.bss)
    .bss                                     0x20001060   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20001060   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200010c4   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200010d8   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x200010ec   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20001100   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20001114   Data          20  tasks.o(.bss)
    .bss                                     0x20001128   Section       40  timers.o(.bss)
    xActiveTimerList1                        0x20001128   Data          20  timers.o(.bss)
    xActiveTimerList2                        0x2000113c   Data          20  timers.o(.bss)
    .bss                                     0x20001150   Section       96  libspace.o(.bss)
    HEAP                                     0x200011b0   Section      512  startup_stm32f051x8.o(HEAP)
    Heap_Mem                                 0x200011b0   Data         512  startup_stm32f051x8.o(HEAP)
    STACK                                    0x200013b0   Section     1024  startup_stm32f051x8.o(STACK)
    Stack_Mem                                0x200013b0   Data        1024  startup_stm32f051x8.o(STACK)
    __initial_sp                             0x200017b0   Data           0  startup_stm32f051x8.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000bc   Number         0  startup_stm32f051x8.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f051x8.o(RESET)
    __Vectors_End                            0x080000bc   Data           0  startup_stm32f051x8.o(RESET)
    __main                                   0x080000bd   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000c5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000c5   Thumb Code    52  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000c5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080000d5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000101   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x0800011d   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000139   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0800013b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x0800013d   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800013f   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000141   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000141   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000141   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x08000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x08000147   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800014b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000153   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000155   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000155   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000159   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __asm___6_port_c_39a90d8d__prvPortStartFirstTask 0x08000161   Thumb Code    36  port.o(.emb_text)
    ulSetInterruptMaskFromISR                0x08000189   Thumb Code     8  port.o(.emb_text)
    vClearInterruptMaskFromISR               0x08000191   Thumb Code     6  port.o(.emb_text)
    PendSV_Handler                           0x08000197   Thumb Code    62  port.o(.emb_text)
    __aeabi_memcpy4                          0x080001d9   Thumb Code    56  rt_memcpy.o(.emb_text)
    __aeabi_memcpy8                          0x080001d9   Thumb Code     0  rt_memcpy.o(.emb_text)
    Reset_Handler                            0x08000211   Thumb Code     8  startup_stm32f051x8.o(.text)
    NMI_Handler                              0x08000219   Thumb Code     2  startup_stm32f051x8.o(.text)
    HardFault_Handler                        0x0800021b   Thumb Code     2  startup_stm32f051x8.o(.text)
    ADC1_COMP_IRQHandler                     0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    CEC_IRQHandler                           0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    DMA1_Channel2_3_IRQHandler               0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    DMA1_Channel4_5_IRQHandler               0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    EXTI0_1_IRQHandler                       0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    EXTI2_3_IRQHandler                       0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    EXTI4_15_IRQHandler                      0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    FLASH_IRQHandler                         0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    I2C1_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    I2C2_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    PVD_IRQHandler                           0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    RCC_IRQHandler                           0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    RTC_IRQHandler                           0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    SPI1_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    SPI2_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM14_IRQHandler                         0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM15_IRQHandler                         0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM16_IRQHandler                         0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM17_IRQHandler                         0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM1_BRK_UP_TRG_COM_IRQHandler           0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM1_CC_IRQHandler                       0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM2_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM3_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TIM6_DAC_IRQHandler                      0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    TSC_IRQHandler                           0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    USART1_IRQHandler                        0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    USART2_IRQHandler                        0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    WWDG_IRQHandler                          0x08000223   Thumb Code     0  startup_stm32f051x8.o(.text)
    __user_initial_stackheap                 0x08000225   Thumb Code     0  startup_stm32f051x8.o(.text)
    __aeabi_memcpy                           0x08000249   Thumb Code   130  rt_memcpy.o(.text)
    __rt_memcpy                              0x08000249   Thumb Code     0  rt_memcpy.o(.text)
    __aeabi_memset                           0x080002cb   Thumb Code    18  aeabi_memset.o(.text)
    __aeabi_uidiv                            0x080002dd   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_uidivmod                         0x080002dd   Thumb Code    20  aeabi_sdiv.o(.text)
    __aeabi_idiv                             0x080002f1   Thumb Code     0  aeabi_sdiv.o(.text)
    __aeabi_idivmod                          0x080002f1   Thumb Code   326  aeabi_sdiv.o(.text)
    __use_two_region_memory                  0x08000437   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000439   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800043b   Thumb Code     2  heapauxi.o(.text)
    _memset_w                                0x0800043d   Thumb Code    26  rt_memclr.o(.text)
    _memset                                  0x08000457   Thumb Code    30  rt_memclr.o(.text)
    __aeabi_memclr                           0x08000475   Thumb Code     4  rt_memclr.o(.text)
    __rt_memclr                              0x08000475   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000479   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr8                          0x08000479   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr_w                            0x08000479   Thumb Code     4  rt_memclr.o(.text)
    __user_setup_stackheap                   0x0800047d   Thumb Code    62  sys_stackheap_outer.o(.text)
    exit                                     0x080004bb   Thumb Code    16  exit.o(.text)
    __user_libspace                          0x080004cd   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080004cd   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080004cd   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080004d5   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080004e1   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080004e1   Thumb Code     2  use_no_semi.o(.text)
    SVC_Handler                              0x080004e3   Thumb Code     2  port.o(i.SVC_Handler)
    __semihosting_library_function           0x080004e3   Thumb Code     0  indicate_semi.o(.text)
    SysTick_Handler                          0x080004e5   Thumb Code    32  port.o(i.SysTick_Handler)
    SystemInit                               0x08000509   Thumb Code     2  system_stm32f0xx.o(i.SystemInit)
    __ARM_common_switch8                     0x0800050b   Thumb Code    28  tasks.o(i.__ARM_common_switch8)
    main                                     0x08000529   Thumb Code    30  main.o(i.main)
    pvPortMalloc                             0x08000f2d   Thumb Code   100  heap_1.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x08000fa1   Thumb Code    26  port.o(i.pxPortInitialiseStack)
    uxListRemove                             0x08000fc1   Thumb Code    40  list.o(i.uxListRemove)
    vListInitialise                          0x08000fe9   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x08001003   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x08001009   Thumb Code    54  list.o(i.vListInsert)
    vListInsertEnd                           0x0800103f   Thumb Code    24  list.o(i.vListInsertEnd)
    vPeriodicTask                            0x08001057   Thumb Code    24  main.o(i.vPeriodicTask)
    vPortEnterCritical                       0x08001071   Thumb Code    22  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x0800108d   Thumb Code    36  port.o(i.vPortExitCritical)
    vPortFree                                0x080010b5   Thumb Code    22  heap_1.o(i.vPortFree)
    vPortYield                               0x080010cd   Thumb Code    18  port.o(i.vPortYield)
    vQueueWaitForMessageRestricted           0x080010e5   Thumb Code    76  queue.o(i.vQueueWaitForMessageRestricted)
    vTaskDelayUntil                          0x08001131   Thumb Code   146  tasks.o(i.vTaskDelayUntil)
    vTaskInternalSetTimeOutState             0x080011cd   Thumb Code    14  tasks.o(i.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x080011e5   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x080011f1   Thumb Code    38  tasks.o(i.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0800121d   Thumb Code    48  tasks.o(i.vTaskPlaceOnEventListRestricted)
    vTaskStartScheduler                      0x08001251   Thumb Code    92  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x080012c9   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x080012d9   Thumb Code   108  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x08001359   Thumb Code    48  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x08001391   Thumb Code    84  queue.o(i.xQueueGenericCreate)
    xQueueGenericReset                       0x080013e5   Thumb Code   130  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x08001467   Thumb Code   384  queue.o(i.xQueueGenericSend)
    xQueueGenericSendFromISR                 0x080015e7   Thumb Code   216  queue.o(i.xQueueGenericSendFromISR)
    xQueueReceive                            0x080016bf   Thumb Code   312  queue.o(i.xQueueReceive)
    xTaskCheckForTimeOut                     0x080017f9   Thumb Code   132  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x08001889   Thumb Code    92  tasks.o(i.xTaskCreate)
    xTaskGetSchedulerState                   0x080018e5   Thumb Code    28  tasks.o(i.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08001909   Thumb Code     6  tasks.o(i.xTaskGetTickCount)
    xTaskIncrementTick                       0x08001915   Thumb Code   270  tasks.o(i.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08001a51   Thumb Code   124  tasks.o(i.xTaskPriorityDisinherit)
    xTaskRemoveFromEventList                 0x08001ad9   Thumb Code   116  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08001b65   Thumb Code   206  tasks.o(i.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08001c55   Thumb Code    52  timers.o(i.xTimerCreateTimerTask)
    xTimerGenericCommand                     0x08001c9d   Thumb Code   110  timers.o(i.xTimerGenericCommand)
    Region$$Table$$Base                      0x08001d10   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001d30   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_stm32f0xx.o(.data)
    pxCurrentTCB                             0x20000010   Data           4  tasks.o(.data)
    __libspace_start                         0x20001150   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200011b0   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x080000bd

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00001d90, Max: 0x00010000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001d30, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000bc   Data   RO           96    RESET               startup_stm32f051x8.o
    0x080000bc   0x080000bc   0x00000008   Code   RO         1180  * !!!main             c_p.l(__main.o)
    0x080000c4   0x080000c4   0x0000003c   Code   RO         1351    !!!scatter          c_p.l(__scatter.o)
    0x08000100   0x08000100   0x0000001a   Code   RO         1353    !!handler_copy      c_p.l(__scatter_copy.o)
    0x0800011a   0x0800011a   0x00000002   PAD
    0x0800011c   0x0800011c   0x0000001c   Code   RO         1355    !!handler_zi        c_p.l(__scatter_zi.o)
    0x08000138   0x08000138   0x00000002   Code   RO         1220    .ARM.Collect$$libinit$$00000000  c_p.l(libinit.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1234    .ARM.Collect$$libinit$$00000002  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1236    .ARM.Collect$$libinit$$00000004  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1239    .ARM.Collect$$libinit$$0000000A  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1241    .ARM.Collect$$libinit$$0000000C  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1243    .ARM.Collect$$libinit$$0000000E  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1246    .ARM.Collect$$libinit$$00000011  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1248    .ARM.Collect$$libinit$$00000013  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1250    .ARM.Collect$$libinit$$00000015  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1252    .ARM.Collect$$libinit$$00000017  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1254    .ARM.Collect$$libinit$$00000019  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1256    .ARM.Collect$$libinit$$0000001B  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1258    .ARM.Collect$$libinit$$0000001D  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1260    .ARM.Collect$$libinit$$0000001F  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1262    .ARM.Collect$$libinit$$00000021  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1264    .ARM.Collect$$libinit$$00000023  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1266    .ARM.Collect$$libinit$$00000025  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1270    .ARM.Collect$$libinit$$0000002C  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1272    .ARM.Collect$$libinit$$0000002E  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1274    .ARM.Collect$$libinit$$00000030  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000000   Code   RO         1276    .ARM.Collect$$libinit$$00000032  c_p.l(libinit2.o)
    0x0800013a   0x0800013a   0x00000002   Code   RO         1277    .ARM.Collect$$libinit$$00000033  c_p.l(libinit2.o)
    0x0800013c   0x0800013c   0x00000002   Code   RO         1308    .ARM.Collect$$libshutdown$$00000000  c_p.l(libshutdown.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1334    .ARM.Collect$$libshutdown$$00000002  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1336    .ARM.Collect$$libshutdown$$00000004  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1339    .ARM.Collect$$libshutdown$$00000007  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1342    .ARM.Collect$$libshutdown$$0000000A  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1344    .ARM.Collect$$libshutdown$$0000000C  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000000   Code   RO         1347    .ARM.Collect$$libshutdown$$0000000F  c_p.l(libshutdown2.o)
    0x0800013e   0x0800013e   0x00000002   Code   RO         1348    .ARM.Collect$$libshutdown$$00000010  c_p.l(libshutdown2.o)
    0x08000140   0x08000140   0x00000000   Code   RO         1182    .ARM.Collect$$rtentry$$00000000  c_p.l(__rtentry.o)
    0x08000140   0x08000140   0x00000000   Code   RO         1190    .ARM.Collect$$rtentry$$00000002  c_p.l(__rtentry2.o)
    0x08000140   0x08000140   0x00000006   Code   RO         1202    .ARM.Collect$$rtentry$$00000004  c_p.l(__rtentry4.o)
    0x08000146   0x08000146   0x00000000   Code   RO         1192    .ARM.Collect$$rtentry$$00000009  c_p.l(__rtentry2.o)
    0x08000146   0x08000146   0x00000004   Code   RO         1193    .ARM.Collect$$rtentry$$0000000A  c_p.l(__rtentry2.o)
    0x0800014a   0x0800014a   0x00000000   Code   RO         1195    .ARM.Collect$$rtentry$$0000000C  c_p.l(__rtentry2.o)
    0x0800014a   0x0800014a   0x00000008   Code   RO         1196    .ARM.Collect$$rtentry$$0000000D  c_p.l(__rtentry2.o)
    0x08000152   0x08000152   0x00000002   Code   RO         1225    .ARM.Collect$$rtexit$$00000000  c_p.l(rtexit.o)
    0x08000154   0x08000154   0x00000000   Code   RO         1281    .ARM.Collect$$rtexit$$00000002  c_p.l(rtexit2.o)
    0x08000154   0x08000154   0x00000004   Code   RO         1282    .ARM.Collect$$rtexit$$00000003  c_p.l(rtexit2.o)
    0x08000158   0x08000158   0x00000006   Code   RO         1283    .ARM.Collect$$rtexit$$00000004  c_p.l(rtexit2.o)
    0x0800015e   0x0800015e   0x00000002   PAD
    0x08000160   0x08000160   0x00000078   Code   RO          265    .emb_text           port.o
    0x080001d8   0x080001d8   0x00000038   Code   RO         1168    .emb_text           c_p.l(rt_memcpy.o)
    0x08000210   0x08000210   0x00000038   Code   RO           97    .text               startup_stm32f051x8.o
    0x08000248   0x08000248   0x00000082   Code   RO         1169    .text               c_p.l(rt_memcpy.o)
    0x080002ca   0x080002ca   0x00000012   Code   RO         1172    .text               c_p.l(aeabi_memset.o)
    0x080002dc   0x080002dc   0x0000015a   Code   RO         1174    .text               c_p.l(aeabi_sdiv.o)
    0x08000436   0x08000436   0x00000006   Code   RO         1178    .text               c_p.l(heapauxi.o)
    0x0800043c   0x0800043c   0x00000040   Code   RO         1187    .text               c_p.l(rt_memclr.o)
    0x0800047c   0x0800047c   0x0000003e   Code   RO         1206    .text               c_p.l(sys_stackheap_outer.o)
    0x080004ba   0x080004ba   0x00000010   Code   RO         1209    .text               c_p.l(exit.o)
    0x080004ca   0x080004ca   0x00000002   PAD
    0x080004cc   0x080004cc   0x00000008   Code   RO         1221    .text               c_p.l(libspace.o)
    0x080004d4   0x080004d4   0x0000000c   Code   RO         1278    .text               c_p.l(sys_exit.o)
    0x080004e0   0x080004e0   0x00000002   Code   RO         1297    .text               c_p.l(use_no_semi.o)
    0x080004e2   0x080004e2   0x00000000   Code   RO         1299    .text               c_p.l(indicate_semi.o)
    0x080004e2   0x080004e2   0x00000002   Code   RO          266    i.SVC_Handler       port.o
    0x080004e4   0x080004e4   0x00000024   Code   RO          267    i.SysTick_Handler   port.o
    0x08000508   0x08000508   0x00000002   Code   RO          104    i.SystemInit        system_stm32f0xx.o
    0x0800050a   0x0800050a   0x0000001c   Code   RO          993    i.__ARM_common_switch8  tasks.o
    0x08000526   0x08000526   0x00000002   PAD
    0x08000528   0x08000528   0x0000002c   Code   RO            3    i.main              main.o
    0x08000554   0x08000554   0x00000088   Code   RO          594    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x080005dc   0x080005dc   0x000000ac   Code   RO          595    i.prvAddNewTaskToReadyList  tasks.o
    0x08000688   0x08000688   0x00000050   Code   RO         1007    i.prvCheckForValidListAndQueue  timers.o
    0x080006d8   0x080006d8   0x00000048   Code   RO          596    i.prvCheckTasksWaitingTermination  tasks.o
    0x08000720   0x08000720   0x0000002c   Code   RO          343    i.prvCopyDataFromQueue  queue.o
    0x0800074c   0x0800074c   0x00000080   Code   RO          344    i.prvCopyDataToQueue  queue.o
    0x080007cc   0x080007cc   0x00000012   Code   RO          597    i.prvDeleteTCB      tasks.o
    0x080007de   0x080007de   0x00000002   PAD
    0x080007e0   0x080007e0   0x00000050   Code   RO          598    i.prvGetExpectedIdleTime  tasks.o
    0x08000830   0x08000830   0x0000002c   Code   RO         1008    i.prvGetNextExpireTime  timers.o
    0x0800085c   0x0800085c   0x00000054   Code   RO          599    i.prvIdleTask       tasks.o
    0x080008b0   0x080008b0   0x00000030   Code   RO          347    i.prvInitialiseNewQueue  queue.o
    0x080008e0   0x080008e0   0x000000c0   Code   RO          600    i.prvInitialiseNewTask  tasks.o
    0x080009a0   0x080009a0   0x00000064   Code   RO          601    i.prvInitialiseTaskLists  tasks.o
    0x08000a04   0x08000a04   0x00000054   Code   RO         1010    i.prvInsertTimerInActiveList  timers.o
    0x08000a58   0x08000a58   0x0000001c   Code   RO          348    i.prvIsQueueEmpty   queue.o
    0x08000a74   0x08000a74   0x0000001e   Code   RO          349    i.prvIsQueueFull    queue.o
    0x08000a92   0x08000a92   0x0000007a   Code   RO          350    i.prvNotifyQueueSetContainer  queue.o
    0x08000b0c   0x08000b0c   0x00000068   Code   RO         1011    i.prvProcessExpiredTimer  timers.o
    0x08000b74   0x08000b74   0x00000144   Code   RO         1012    i.prvProcessReceivedCommands  timers.o
    0x08000cb8   0x08000cb8   0x0000006c   Code   RO         1013    i.prvProcessTimerOrBlockTask  timers.o
    0x08000d24   0x08000d24   0x00000038   Code   RO          603    i.prvResetNextTaskUnblockTime  tasks.o
    0x08000d5c   0x08000d5c   0x0000002c   Code   RO         1014    i.prvSampleTimeNow  timers.o
    0x08000d88   0x08000d88   0x0000002c   Code   RO          268    i.prvSetupTimerInterrupt  port.o
    0x08000db4   0x08000db4   0x00000094   Code   RO         1015    i.prvSwitchTimerLists  timers.o
    0x08000e48   0x08000e48   0x00000024   Code   RO          269    i.prvTaskExitError  port.o
    0x08000e6c   0x08000e6c   0x0000001a   Code   RO         1016    i.prvTimerTask      timers.o
    0x08000e86   0x08000e86   0x000000a6   Code   RO          351    i.prvUnlockQueue    queue.o
    0x08000f2c   0x08000f2c   0x00000074   Code   RO          224    i.pvPortMalloc      heap_1.o
    0x08000fa0   0x08000fa0   0x00000020   Code   RO          270    i.pxPortInitialiseStack  port.o
    0x08000fc0   0x08000fc0   0x00000028   Code   RO          165    i.uxListRemove      list.o
    0x08000fe8   0x08000fe8   0x0000001a   Code   RO          166    i.vListInitialise   list.o
    0x08001002   0x08001002   0x00000006   Code   RO          167    i.vListInitialiseItem  list.o
    0x08001008   0x08001008   0x00000036   Code   RO          168    i.vListInsert       list.o
    0x0800103e   0x0800103e   0x00000018   Code   RO          169    i.vListInsertEnd    list.o
    0x08001056   0x08001056   0x00000018   Code   RO            4    i.vPeriodicTask     main.o
    0x0800106e   0x0800106e   0x00000002   PAD
    0x08001070   0x08001070   0x0000001c   Code   RO          272    i.vPortEnterCritical  port.o
    0x0800108c   0x0800108c   0x00000028   Code   RO          273    i.vPortExitCritical  port.o
    0x080010b4   0x080010b4   0x00000016   Code   RO          225    i.vPortFree         heap_1.o
    0x080010ca   0x080010ca   0x00000002   PAD
    0x080010cc   0x080010cc   0x00000018   Code   RO          274    i.vPortYield        port.o
    0x080010e4   0x080010e4   0x0000004c   Code   RO          359    i.vQueueWaitForMessageRestricted  queue.o
    0x08001130   0x08001130   0x0000009c   Code   RO          618    i.vTaskDelayUntil   tasks.o
    0x080011cc   0x080011cc   0x00000018   Code   RO          622    i.vTaskInternalSetTimeOutState  tasks.o
    0x080011e4   0x080011e4   0x0000000c   Code   RO          623    i.vTaskMissedYield  tasks.o
    0x080011f0   0x080011f0   0x0000002c   Code   RO          625    i.vTaskPlaceOnEventList  tasks.o
    0x0800121c   0x0800121c   0x00000034   Code   RO          626    i.vTaskPlaceOnEventListRestricted  tasks.o
    0x08001250   0x08001250   0x00000078   Code   RO          634    i.vTaskStartScheduler  tasks.o
    0x080012c8   0x080012c8   0x00000010   Code   RO          637    i.vTaskSuspendAll   tasks.o
    0x080012d8   0x080012d8   0x00000080   Code   RO          638    i.vTaskSwitchContext  tasks.o
    0x08001358   0x08001358   0x00000038   Code   RO          275    i.xPortStartScheduler  port.o
    0x08001390   0x08001390   0x00000054   Code   RO          364    i.xQueueGenericCreate  queue.o
    0x080013e4   0x080013e4   0x00000082   Code   RO          365    i.xQueueGenericReset  queue.o
    0x08001466   0x08001466   0x00000180   Code   RO          366    i.xQueueGenericSend  queue.o
    0x080015e6   0x080015e6   0x000000d8   Code   RO          367    i.xQueueGenericSendFromISR  queue.o
    0x080016be   0x080016be   0x00000138   Code   RO          376    i.xQueueReceive     queue.o
    0x080017f6   0x080017f6   0x00000002   PAD
    0x080017f8   0x080017f8   0x00000090   Code   RO          640    i.xTaskCheckForTimeOut  tasks.o
    0x08001888   0x08001888   0x0000005c   Code   RO          641    i.xTaskCreate       tasks.o
    0x080018e4   0x080018e4   0x00000024   Code   RO          647    i.xTaskGetSchedulerState  tasks.o
    0x08001908   0x08001908   0x0000000c   Code   RO          648    i.xTaskGetTickCount  tasks.o
    0x08001914   0x08001914   0x0000013c   Code   RO          650    i.xTaskIncrementTick  tasks.o
    0x08001a50   0x08001a50   0x00000088   Code   RO          653    i.xTaskPriorityDisinherit  tasks.o
    0x08001ad8   0x08001ad8   0x0000008c   Code   RO          655    i.xTaskRemoveFromEventList  tasks.o
    0x08001b64   0x08001b64   0x000000f0   Code   RO          656    i.xTaskResumeAll    tasks.o
    0x08001c54   0x08001c54   0x00000048   Code   RO         1023    i.xTimerCreateTimerTask  timers.o
    0x08001c9c   0x08001c9c   0x00000074   Code   RO         1024    i.xTimerGenericCommand  timers.o
    0x08001d10   0x08001d10   0x00000020   Data   RO         1349    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x08001d30, Size: 0x000017b0, Max: 0x00002000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08001d30   0x00000004   Data   RW          106    .data               system_stm32f0xx.o
    0x20000004   0x08001d34   0x00000008   Data   RW          229    .data               heap_1.o
    0x2000000c   0x08001d3c   0x00000004   Data   RW          276    .data               port.o
    0x20000010   0x08001d40   0x0000003c   Data   RW          659    .data               tasks.o
    0x2000004c   0x08001d7c   0x00000014   Data   RW         1032    .data               timers.o
    0x20000060        -       0x00001000   Zero   RW          228    .bss                heap_1.o
    0x20001060        -       0x000000c8   Zero   RW          658    .bss                tasks.o
    0x20001128        -       0x00000028   Zero   RW         1031    .bss                timers.o
    0x20001150        -       0x00000060   Zero   RW         1222    .bss                c_p.l(libspace.o)
    0x200011b0        -       0x00000200   Zero   RW           95    HEAP                startup_stm32f051x8.o
    0x200013b0        -       0x00000400   Zero   RW           94    STACK               startup_stm32f051x8.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0       2292   freertos_evr.o
       138         16          0          8       4096       2299   heap_1.o
       150          0          0          0          0       4934   list.o
        68         14          0          0          0      15651   main.o
       418         58          0          4          0       7208   port.o
      1768          0          0          0          0      15679   queue.o
        56         26        188          0       1536        652   startup_stm32f051x8.o
         2          0          0          4          0       1443   system_stm32f0xx.o
      2606        368          0         60        200      24755   tasks.o
      1150        102          0         20         40      12407   timers.o

    ----------------------------------------------------------------------
      6366        584        220         96       5872      87320   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         68   aeabi_memset.o
       346          0          0          0          0         92   aeabi_sdiv.o
        16          0          0          0          0         68   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        64          0          0          0          0        108   rt_memclr.o
       186          0          0          0          0        144   rt_memcpy.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         60   sys_exit.o
        62          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       886         16          0          0         96        960   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       880         16          0          0         96        960   c_p.l

    ----------------------------------------------------------------------
       886         16          0          0         96        960   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7252        600        220         96       5968      84996   Grand Totals
      7252        600        220         96       5968      84996   ELF Image Totals
      7252        600        220         96          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7472 (   7.30kB)
    Total RW  Size (RW Data + ZI Data)              6064 (   5.92kB)
    Total ROM Size (Code + RO Data + RW Data)       7568 (   7.39kB)

==============================================================================

